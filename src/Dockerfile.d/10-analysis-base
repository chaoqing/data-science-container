FROM {% BASE_IMAGE %} AS {% BASE_IMAGE %}-analysis

ARG R_VERSION=latest
ARG RSTUDIO_VERSION=stable
ARG SHINY_SERVER_VERSION=latest
ARG CRAN=https://cran.r-project.org

ENV DEFAULT_USER=${USER_NAME:-${NB_USER:-jovyan}}
ENV PURGE_BUILDDEPS=false
ENV TZ="Etc/UTC"
ENV LANG=en_US.UTF-8
ENV NVBLAS_CONFIG_FILE="/etc/nvblas.conf"

COPY --chmod=755 setup-scripts/50-install-rstudio.sh /opt/setup-scripts/
COPY --chmod=755 setup-scripts/install-rstudio.d /opt/setup-scripts/install-rstudio.d/
COPY --chmod=755 root/usr/local/bin/install2while_missing.r /usr/local/bin/

RUN echo " ======= Compile R from source =======" && \
    /opt/setup-scripts/install-rstudio.d/10-install_R_source.sh && \
    /opt/setup-scripts/install-rstudio.d/20-setup_R.sh && \
    /opt/setup-scripts/install-rstudio.d/30-config_R_cuda.sh

RUN echo " ======= Installing Packages =======" && \
    /opt/setup-scripts/install-rstudio.d/40-install_tidyverse.sh

RUN echo " ======= Installing RStudio =======" && \
    /opt/setup-scripts/install-rstudio.d/50-install_rstudio.sh && \
    /opt/setup-scripts/install-rstudio.d/60-install_pandoc.sh && \
    /opt/setup-scripts/install-rstudio.d/70-install_quarto.sh && \
    /opt/setup-scripts/install-rstudio.d/80-install_verse.sh && \
    /opt/setup-scripts/install-rstudio.d/90-install_geospatial.sh

RUN echo " ======= Installing Shiny =======" && \
    test "$(uname -m)" = "aarch64" || \
    /opt/setup-scripts/install-rstudio.d/95-install_shiny_server.sh



ARG PYTHON_VERSION=default
ENV CONDA_DIR=/opt/conda
ENV MAMBA_ROOT_PREFIX=${CONDA_DIR}

# Install all OS dependencies for a fully functional Server
RUN apt-get update --yes && \
    apt-get install --yes --no-install-recommends \
    # Common useful utilities
    curl \
    git \
    nano-tiny \
    tzdata \
    unzip \
    vim-tiny \
    # git-over-ssh
    openssh-client \
    # `less` is needed to run help in R
    # see: https://github.com/jupyter/docker-stacks/issues/1588
    less \
    # `nbconvert` dependencies
    # https://nbconvert.readthedocs.io/en/latest/install.html#installing-tex
    texlive-xetex \
    texlive-fonts-recommended \
    texlive-plain-generic \
    # Enable clipboard on Linux host systems
    xclip \
    # for cython: https://cython.readthedocs.io/en/latest/src/quickstart/install.html
    build-essential \
    # for latex labels
    cm-super \
    dvipng \
    # for matplotlib anim
    ffmpeg \
    fonts-dejavu \
    # - Add necessary fonts for matplotlib/seaborn
    #   See https://github.com/jupyter/docker-stacks/pull/380 for details
    fonts-liberation \
    # - `pandoc` is used to convert notebooks to html files
    #   it's not present in the aarch64 Ubuntu image, so we install it here
    pandoc \
    # - `run-one` - a wrapper script that runs no more
    #   than one unique instance of some command with a unique set of arguments,
    #   we use `run-one-constantly` to support the `RESTARTABLE` option
    run-one && \
    apt-get clean && rm -rf /var/lib/apt/lists/*


ARG USE_CONDA_ENV=0
ARG POETRY_VERSION=2.0.0
COPY --chmod=755 setup-scripts/60-install-jupyter.sh /opt/setup-scripts/
COPY --chmod=755 root/usr/local/bin/fix-permissions /usr/local/bin/
RUN bash -c ". /opt/setup-scripts/60-install-jupyter.sh; install_python_analysis_tools"
